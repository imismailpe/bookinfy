{"version":3,"sources":["components/DataTable.js","components/ViewUsers.js","components/CreateUser.js","containers/EditTable.js","containers/EditUser.js","constants.js","reducers.js","serviceWorker.js","index.js","containers/App.js"],"names":["DataTable","props","_id","name","email","className","to","ViewUsers","useState","usersCollection","setUsersCollection","useEffect","axios","get","then","res","data","catch","error","console","log","map","key","CreateUser","uName","useFormInput","uEmail","uPassword","onSubmit","e","preventDefault","userObject","value","password","post","type","initialValue","setValue","onChange","target","EditTable","useData","Fragment","colSpan","onClick","put","EditUser","userInEdit","setUserInEdit","isLoading","setIsLoading","match","params","userid","initialState","Boolean","window","location","hostname","store","createStore","state","action","Object","assign","payload","ReactDOM","render","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38a9d36f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function DataTable({props}){\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {props._id}\r\n            </td>\r\n            <td>\r\n                {props.name}\r\n            </td>\r\n            <td>\r\n                {props.email}\r\n            </td>\r\n            <td>\r\n                <Link className=\"nav-link\" to={`/edituser/${props._id}`}>Edit</Link>\r\n            </td>\r\n            \r\n        </tr>\r\n    )\r\n}","import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport DataTable from './DataTable';\r\nimport {BrowserRouter,Link} from 'react-router-dom';\r\n\r\nexport default function ViewUsers(){\r\n\tconst [usersCollection,setUsersCollection] = useState([])\r\n\r\n\tuseEffect(()=>{\r\n\t\taxios.get('http://localhost:4000/users')\r\n\t\t.then((res)=>{\r\n\t\t\tsetUsersCollection(res.data)\r\n\t\t}).catch((error)=>{\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n\t},[])\r\n\r\n\treturn(\r\n\t\t<div className=\"wrapper-users\">\r\n      <div className=\"container\">\r\n        <table className=\"table table-striped table-dark\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <td>ID</td>\r\n              <td>Name</td>\r\n              <td>Email</td>\r\n              <td>Action</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {\r\n          \tusersCollection.map((data) => {\r\n\t\t\t\treturn <DataTable props={data} key={data._id} />\r\n\t\t\t})\r\n          }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\t)\r\n}","import React,{useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function CreateUser(){\r\n\tconst uName = useFormInput('')\r\n\tconst uEmail = useFormInput('')\r\n\tconst uPassword = useFormInput('')\r\n\r\n\tconst submitForm=(e)=>{\r\n\t\te.preventDefault();\r\n\t\tconst userObject={\r\n\t\t\tname: uName.value,\r\n\t\t\temail: uEmail.value,\r\n\t\t\tpassword: uPassword.value\r\n\t\t}\r\n\t\taxios.post('http://localhost:4000/create',userObject)\r\n\t\t\t.then((res)=>{\r\n\t\t\t\tconsole.log(res.data)\r\n\t\t\t}).catch((error)=>{\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className=\"wrapper\">\r\n\t\t\t<form onSubmit={submitForm}>\r\n\t\t\t\t<div className=\"form-group row\">\r\n\t\t\t\t\t<label className=\"col-sm-4\">Name:</label>\r\n\t\t\t\t\t<input {...uName} name=\"name\" type=\"text\" className=\"form-control col-sm-8\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group row\">\r\n\t\t\t\t\t<label className=\"col-sm-4\">Email:</label>\r\n\t\t\t\t\t<input {...uEmail} type=\"email\" className=\"form-control col-sm-8\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group row\">\r\n\t\t\t\t\t<label className=\"col-sm-4\">Password:</label>\r\n\t\t\t\t\t<input {...uPassword} type=\"password\" className=\"form-control col-sm-8\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\nfunction useFormInput(initialValue){\r\n\tconst [value,setValue] = useState(initialValue)\r\n\tfunction handleChange(e){\r\n\t\tsetValue(e.target.value)\r\n\t}\r\n\treturn {\r\n\t\tvalue,\r\n\t\tonChange: handleChange\r\n\t}\r\n}","import React, { useState,useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default function EditTable({props}){\r\n  const uName = useData(props.name)\r\n  const uEmail = useData(props.email)\r\n\r\n  const submitUpdate = ()=>{\r\n    const userObject={\r\n      name: uName.value,\r\n      email: uEmail.value\r\n    }\r\n    console.log(\"submitted data is \", userObject)\r\n    console.log(\"userid is \",props._id)\r\n    axios.put(`http://localhost:4000/users/update/${props._id}`,userObject)\r\n    .then((res)=>{\r\n      console.log(res)\r\n    }).catch((error)=>{\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  return (\r\n      <React.Fragment>\r\n      <tr>\r\n          <td>Id</td>\r\n          <td>\r\n              {props._id}\r\n          </td>\r\n      </tr>\r\n      <tr>\r\n          <td>Name</td>\r\n          <td>\r\n              <input {...uName} type=\"text\"/>\r\n          </td>\r\n      </tr>\r\n      <tr>\r\n          <td>Email</td>\r\n          <td>\r\n              <input {...uEmail} type=\"email\"/>\r\n          </td>\r\n      </tr>\r\n      <tr>\r\n          <td colSpan='2'>\r\n              \t<button>Delete user</button>&nbsp;\r\n              \t<button onClick={submitUpdate}>Update</button>\r\n          </td>\r\n      </tr>\r\n      </React.Fragment>\r\n  )\r\n}\r\nfunction useData(initialValue){\r\n  const [value,setValue] = useState(initialValue)\r\n  \r\n  function handleChange(e){\r\n    setValue(e.target.value)\r\n  }\r\n  return{\r\n    value,\r\n    onChange: handleChange\r\n  }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport EditTable from '../containers/EditTable';\r\n\r\nexport default function EditUser(props){\r\n\tconst [userInEdit,setUserInEdit] = useState()\r\n\tconst [isLoading,setIsLoading] = useState(true)\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetIsLoading(true)\r\n\t\taxios.get(`http://localhost:4000/users/edit/${props.match.params.userid}`)\r\n\t\t.then((res)=>{\r\n\t\t\tsetUserInEdit(res.data)\r\n\t\t\tsetIsLoading(false)\r\n\t\t}).catch((error)=>{\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n\t},[])\r\n\t\r\n\treturn(\r\n\t\t<div className=\"wrapper-users\">\r\n        <div className=\"container\">\r\n          <table className=\"table table-striped table-dark\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <td>Field</td>\r\n                <td>Value</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {!isLoading && <EditTable props={userInEdit} />}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\t\t)\r\n}","export const EDITUSER='EDITUSER';","import {editUser} from './actions';\r\nimport {EDITUSER} from './constants';\r\n\r\nconst initialState={\r\n\tuserInEdit:{}\r\n}\r\n\r\nexport const setDataR=(state=initialState,action={})=>{\r\n\tswitch(action.type){\r\n\t\tcase EDITUSER:\r\n\t\t\treturn Object.assign({},state,{userInEdit: action.payload});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App';\r\nimport {setDataR} from './reducers';\r\nimport {Provider} from 'react-redux'\r\nimport {createStore} from 'redux';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store=createStore(setDataR)\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\r\n\t, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React,{useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {BrowserRouter as Router,Route,Link,Switch } from 'react-router-dom';\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ViewUsers from '../components/ViewUsers';\r\nimport CreateUser from '../components/CreateUser';\r\nimport EditUser from '../containers/EditUser';\r\nimport '../App.css';\r\n\r\nexport default function App(){\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n      <header>\r\n        <Navbar bg=\"info\" expand=\"md\">\r\n\t\t\t\t  <Navbar.Brand href=\"#\">BookInf</Navbar.Brand>\r\n\t\t\t\t  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t    <Nav className=\"mr-auto\">\r\n\t\t\t\t      <Link className=\"nav-link\" to={\"/createuser\"}>Create User</Link>\r\n\t\t\t\t      <Link className=\"nav-link\" to={\"/viewusers\"}>View Users</Link>\r\n\t\t\t\t      <Link className=\"nav-link\" to={`/edituser/5db063f078c8752d54785b03`}>Edit</Link>\r\n\t\t\t\t    </Nav>\r\n\t\t\t\t  </Navbar.Collapse>\r\n\t\t\t\t</Navbar>\r\n      </header>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Switch>\r\n              <Route path=\"/createuser\" component={CreateUser}/>\r\n              <Route path=\"/viewusers\" component={ViewUsers}/>\r\n              <Route path=\"/edituser/:userid/\" component={EditUser}/>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </Router>\r\n  )\r\n}"],"sourceRoot":""}